package model;

import java.util.Map;

public class Bicycle implements Vehicle{

    /**X location of the Truck.*/
    private int myX;
    
    /**Y location of the Truck.*/
    private int myY;
    
    /**Direction the truck is facing.*/
    private Direction myDirection;
    
    public Bicycle(final int theX, final int theY, final Direction theDirction) {
        myX = theX;
        myY = theY;
        myDirection = theDirction;
    }
    
    @Override
    public boolean canPass(Terrain theTerrain, Light theLight) {
        boolean result = true;
        //final Terrain right = theTerrain;
        //final Terrain left = theTerrain..get(myDirection.left());
        Direction left = myDirection.left();
        Light light = theLight.RED;
        
        if (theTerrain == theTerrain.LIGHT) {
            if (theLight == Light.RED || theLight == Light.YELLOW) {
                result = false;
                  
                 //       || myDirection.right() == theTerrain.TRAIL) {
                    
                //}
            }
        }
        return result;
    }

    @Override
    public Direction chooseDirection(final Map<Direction, Terrain> theNeighbors) {
        Direction result = Direction.EAST;
        
        final Terrain straight = theNeighbors.get(myDirection);
        final Terrain right = theNeighbors.get(myDirection.right());
        final Terrain left = theNeighbors.get(myDirection.left());
//        
//        final Light leftLight = theNeighbors.get(left.LIGHT);
//        Light li = (Light) left.LIGHT;
//        
//        boolean can = canPass(left,);
        
        if (straight == Terrain.TRAIL) {
            result = myDirection;
        } else if (left == Terrain.TRAIL) {
            result = myDirection.left();
        } else if (right == Terrain.TRAIL) {
            result = myDirection.right();
        } else if (straight == Terrain.STREET || straight == Terrain.LIGHT) {
            result = myDirection;
        } else if (left == Terrain.STREET || left == Terrain.LIGHT) {
            result = myDirection.left();
        } else if (right == Terrain.STREET || right == Terrain.LIGHT) {
            result = myDirection.right();
        } else {
            result = myDirection.reverse();
        }
        return result;
    }

    @Override
    public void collide(final Vehicle theOther) {
        // TODO Auto-generated method stub
        
    }

    @Override
    public int getDeathTime() {
        // TODO Auto-generated method stub
        return 0;
    }

    @Override
    public String getImageFileName() {
        String result = "bicycle.gif";
        if (!isAlive()) {
            result = "bicycle_dead.gif";
        }
        return result;
    }

    @Override
    public Direction getDirection() {
        // TODO Auto-generated method stub
        return myDirection;
    }

    @Override
    public int getX() {
        // TODO Auto-generated method stub
        return myX;
    }

    @Override
    public int getY() {
        // TODO Auto-generated method stub
        return myY;
    }

    @Override
    public boolean isAlive() {
        // TODO Auto-generated method stub
        return true;
    }

    @Override
    public void poke() {
        // TODO Auto-generated method stub
        
    }

    @Override
    public void reset() {
        // TODO Auto-generated method stub
        
    }

    @Override
    public void setDirection(final Direction theDir) {
        myDirection = theDir;
    }

    @Override
    public void setX(final int theX) {
        myX = theX;
    }

    @Override
    public void setY(final int theY) {
        myY = theY;
    }

}
